{"version":3,"sources":["redux/actions.js","utils/helpers.js","components/Index.js","components/ReviewQuiz.js","components/About.js","components/PracticeQuiz.js","components/QuizContainer.js","App.js","challenges/index.js","challenges/tn_08_eng_l01_synonyms.js","redux/reducer.js","index.js","utils/registerServiceWorker.js"],"names":["START_ALL","START_QUIZ","START_QUIZ_BY_QUESTION","NEXT_QUESTION","SCORE","RESULTS","FINISH_QUIZ","finishQuiz","type","shuffle","array","cached","max","length","randomize","Math","floor","random","reduce","shuffled","element","index","generateIndex","shuffleAnswers","challenge","solution","choices","newSolutionIndex","indexOf","shuffleQuiz","quiz","JSquiz","toJS","challenges","map","fromJS","findQuiz","selected","quizzes","filter","get","first","setHtmlMetadata","subtitle","elements","document","getElementsByTagName","i","getAttribute","setAttribute","mapScreenSizeToProps","screenSize","screen","isTablet","isMobile","isDesktop","connectScreenSize","connect","state","isActive","cancelQuiz","props","onHover","setState","selection","handleKeyDown","event","code","preventDefault","maxOptions","target","size","find","v","k","history","push","answer","addEventListener","this","removeEventListener","totalQuestions","t","q","renderClassName","css","className","rel","href","title","replace","to","onMouseEnter","React","Component","renderMarkup","html","dangerouslySetInnerHTML","__html","renderQuestion","question","explanation","choice","Review","Prism","highlightAll","id","connectedReview","match","params","Quiz","complete","meta","questions","handleAnswer","nextQuestion","getIn","correct","viewResults","nextTitle","nextProps","score","numberOfQuestions","currentQuestion","percentage","tower","current","total","count","createScoreMeter","widthPercentage","style","width","idx","key","onClick","QuizContainer","originalTitle","active","startAllQuestionQuiz","startQuiz","questionTitle","challengeTitle","end","charAt","slice","validateQuestionName","startQuizByQuestion","activeQuestion","next","dispatchProps","payload","connectedPractice","path","exact","component","Index","About","noExplanation","rejectedTitles","rejectedCategories","verified","category","noRepeatTitle","noRepeatSubtitle","verifiedQuestions","concat","console","warn","log","join","defaultState","Map","List","store","createStore","action","all","set","originalQuiz","findEntry","update","c","splice","insert","s","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.49a49bf0.chunk.js","sourcesContent":["\r\n/* Action Types: */\r\n\r\nexport const START_ALL = 'START_ALL';\r\nexport const START_QUIZ = 'START_QUIZ';\r\nexport const START_QUIZ_BY_QUESTION = 'START_QUIZ_BY_QUESTION';\r\n\r\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\r\nexport const SCORE = 'SCORE';\r\nexport const RESULTS = 'RESULTS';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\n\r\n/* Action Creators: */\r\n\r\nexport const startAllQuestionQuiz = () => ({ type: START_ALL });\r\n\r\nexport const startQuiz = (title) => ({\r\n  type: START_QUIZ,\r\n  payload: title,\r\n});\r\n\r\nexport const startQuizByQuestion = (title, question) => ({\r\n  type: START_QUIZ_BY_QUESTION,\r\n  payload: {\r\n    title, question\r\n  }\r\n});\r\n\r\nexport const correct = () => ({ type: SCORE });\r\nexport const nextQuestion = () => ({ type: NEXT_QUESTION });\r\nexport const viewResults = () => ({ type: RESULTS });\r\nexport const finishQuiz = () => ({ type: FINISH_QUIZ });\r\n","\r\nimport { fromJS } from 'immutable';\r\n\r\n/* This file contains various helper functions used throughout the app */\r\n\r\n/* Given an array, shuffle it's contents */\r\nexport const shuffle = (array) => {\r\n\tconst cached = {};\r\n\tconst max = array.length - 1;\r\n\tconst randomize = () => Math.floor(Math.random() * (max + 1));\r\n\tconst generateIndex = () => {\r\n\t\t\tlet index = randomize();\r\n\t\t\twhile (index in cached) {\r\n\t\t\t\t\tindex = randomize();\r\n\t\t\t};\r\n\t\t\tcached[index] = true;\r\n\t\t\treturn index;\r\n\t};\r\n\treturn array.reduce((shuffled, element) => {\r\n\t\tconst index = generateIndex();\r\n\t\tshuffled[index] = element;\r\n\t\treturn shuffled;\r\n\t}, []);\r\n};\r\n\r\n/* Given a quiz, shuffle the answer options and reassign the correct solution */\r\nexport const shuffleAnswers = (challenge) => {\r\n\tconst solution = challenge.choices[+challenge.solution];\r\n\tchallenge.choices = shuffle(challenge.choices);\r\n\tconst newSolutionIndex = challenge.choices.indexOf(solution);\r\n\tchallenge.solution = newSolutionIndex;\r\n\treturn challenge;\r\n};\r\n\r\n/* Higher level function to shuffle the questions in a quiz and the answer\r\n * choices for each question */\r\nexport const shuffleQuiz = (quiz) => {\r\n\tconst JSquiz = quiz.toJS();\r\n\tJSquiz.challenges = shuffle(JSquiz.challenges);\r\n\tJSquiz.challenges = JSquiz.challenges.map(shuffleAnswers);\r\n\treturn fromJS(JSquiz);\r\n};\r\n\r\nexport const wrapSnippit = function () {\r\n\tconst start = `<pre><code class='language-javascript'>`;\r\n\tconst end = `</code></pre>`;\r\n\tconsole.log([...arguments]);\r\n\tconst snippits = [...arguments].map(s => `${start}${s}${end}`);\r\n\treturn (arguments.length > 1) ? snippits : snippits[0]\r\n}\r\n\r\n/* Given an array of quizes and a title, find the titled quiz in the array */\r\nexport const findQuiz = (selected, quizzes) => {\r\n\treturn quizzes.filter(quiz => quiz.get('title') === selected).first();\r\n};\r\n\r\n/* Given a quiz title and possible question, see if the question is valid */\r\nexport const validateQuestionName = (title, question, quizzes) => {\r\n\tconst quiz = findQuiz(title, quizzes);\r\n\tif (!quiz) return false;\r\n\tconst challenges = quiz.get('challenges');\r\n\treturn challenges.reduce((answer, challenge) => {\r\n\t\tif (answer) return answer;\r\n\t\tconst challengeTitle = challenge.get('subtitle');\r\n\t\tif (challengeTitle === question) return question;\r\n\t\tconst end = challengeTitle.length - 1;\r\n\t\tif (challengeTitle.charAt(end) === '?') {\r\n\t\t\tif (question === challengeTitle.slice(0, end)) {\r\n\t\t\t\treturn challengeTitle;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}, false);\r\n};\r\n\r\n/* Create an array filled with values representing the current\r\n * correct and incorrect answers during a quiz session, given\r\n * the user's current score, the current question index, and\r\n * the total number of questions. This is used to construct\r\n * the score meter in the UI. */\r\nexport const createScoreMeter = (correct, current, total) => {\r\n\tlet count = 0;\r\n\tlet tower = [];\r\n\twhile (correct > 0) {\r\n\t\ttower.push('success');\r\n\t\tcorrect--;\r\n\t\tcount++;\r\n\t}\r\n\twhile (count < current) {\r\n\t\ttower.push('failure');\r\n\t\tcount++;\r\n\t}\r\n\twhile (count < total) {\r\n\t\ttower.push('blank');\r\n\t\tcount++;\r\n\t}\r\n\treturn tower;\r\n};\r\n\r\n/* Modify the HTML meta tag data for each challenge to enable\r\n * content-specific preview on sharing. Currently we only set\r\n * the title property content to be the challenge subtitle. */\r\nexport const setHtmlMetadata = (subtitle) => {\r\n\tvar elements = document.getElementsByTagName('meta');\r\n\tfor (var i = 0; i < elements.length; i++) {\r\n\t  if (elements[i].getAttribute(\"property\") === \"og:title\") {\r\n\t     elements[i].setAttribute('content', subtitle);\r\n\t  }\r\n\t}\r\n};\r\n\r\n/* Screen size helper */\r\nexport const mapScreenSizeToProps = (screenSize) => {\r\n  return { screen: {\r\n    isTablet: screenSize['small'],\r\n    isMobile: screenSize['mobile'],\r\n    isDesktop: screenSize['> small']\r\n  }}\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connectScreenSize } from 'react-screen-size';\r\nimport { finishQuiz } from '../redux/actions';\r\nimport { mapScreenSizeToProps } from '../utils/helpers';\r\n\r\n/* Header Component */\r\nconst renderHeader = (isDesktop) => (\r\n\t<div className='header'>\r\n\t\t<a\r\n\t\t\ttarget=\"_blank\"\r\n\t\t\trel=\"noopener noreferrer\"\r\n\t\t\tclassName=\"fccLink\"\r\n\t\t\thref=\"#\">\r\n\t\t\tDaily English practice\r\n\t\t</a>\r\n\t\t{/* <span>Interview Preparation</span>\r\n\t\t\t{isDesktop && <a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tclassName=\"contributeLink\"\r\n\t\t\t\thref=\"https://github.com/freeCodeCamp/multiple-choice-questions\">\r\n\t\t\t\tContribute <i className='fa fa-github'></i>\r\n\t\t</a>} */}\r\n\t</div>\r\n);\r\n\r\n/* Main Quiz Selector Component */\r\nexport default connectScreenSize(\r\n\tmapScreenSizeToProps)(connect(\r\n\tstate => ({\r\n\t\tquizzes: state.get('quizzes'),\r\n\t\tisActive: state.get('active'),\r\n\t}), { cancelQuiz: finishQuiz })(\r\nclass extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmaxOptions: this.props.quizzes.size + 1,\r\n\t\t\tselection: null,\r\n\t\t\tanswer: null,\r\n\t\t}\r\n\t\tdocument.addEventListener('keydown', this.handleKeyDown);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.isActive) {\r\n\t\t\tthis.props.cancelQuiz();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown, false);\r\n\t}\r\n\tonHover = () => this.setState({ selection: null });\r\n\thandleKeyDown = (event) => {\r\n\r\n\t\tconst { code } = event;\r\n\r\n\t\tif (code === 'Space' || code === 'ArrowDown' || code === 'ArrowUp') {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t\tlet { selection, maxOptions } = this.state;\r\n\r\n\t\tswitch(code) {\r\n\t\tcase 'Space':\r\n\t\t\tconst { quizzes } = this.props;\r\n\t\t\tif (selection !== null) {\r\n\t\t\t\tlet target;\r\n\t\t\t\tif (selection <= this.props.quizzes.size - 1) {\r\n\t\t\t\t\ttarget = `practice/${quizzes\r\n\t\t\t\t\t\t.find((v, k) => k === selection)\r\n\t\t\t\t\t\t.get('title')}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (selection === maxOptions - 1) {\r\n\t\t\t\t\t\ttarget = 'practice/shuffle';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttarget = '/about';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.history.push(target);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowDown':\r\n\t\t\tif (selection === null) {\r\n\t\t\t\tthis.setState({ selection: 0 });\r\n\t\t\t} else {\r\n\t\t\t\tselection++;\r\n\t\t\t\tif (selection === maxOptions + 1) {\r\n\t\t\t\t\tthis.setState({ selection: 0 });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ selection });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'ArrowUp':\r\n\t\t\tif (selection === null) {\r\n\t\t\t\tthis.setState({ selection: maxOptions });\r\n\t\t\t} else {\r\n\t\t\t\tselection--;\r\n\t\t\t\tif (selection === -1) {\r\n\t\t\t\t\tthis.setState({ selection: maxOptions });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ selection });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { maxOptions, selection } = this.state;\r\n\t\tconst { screen, quizzes } = this.props;\r\n\t\tconst { isDesktop } = screen;\r\n\t\tconst totalQuestions = quizzes.reduce((t, q) => {\r\n\t\t\treturn t + q.get('challenges').size;\r\n\t\t}, 0);\r\n\t\tconst renderClassName = (index) => {\r\n\t\t\tlet css = 'title ';\r\n\t\t\tif (isDesktop) {\r\n\t\t\t\tif (index === selection) {\r\n\t\t\t\t\tcss += 'titleHover';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn css;\r\n\t\t};\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t{renderHeader(isDesktop)}\r\n\t\t\t<div className='studyComponent'>\r\n\t\t\t\t{quizzes.map((quiz, index) => {\r\n\t\t\t\t\tconst title = quiz.get('title').replace(/\\s/g, '-');\r\n\t\t\t\t\tconst challenges = quiz.get('challenges');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={title} className='quizContainer'>\r\n\t\t\t\t\t\t\t{/* We could limit the review link to development with this:\r\n\t\t\t\t\t\t\t * process.env.NODE_ENV === 'development' */}\r\n\t\t\t\t\t\t\t<Link className='review' to={`/review/${title}`} title='Review All Questions'>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-search'></i>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link to={`/practice/${title}`} className={renderClassName(index)} onMouseEnter={this.onHover}>\r\n\t\t\t\t\t\t\t\t{quiz.get('titleForQuiz')} <span>({challenges.size} questions)</span>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\t<div className='quizContainer'>\r\n\t\t\t\t\t<Link to='practice/shuffle' className={renderClassName(maxOptions - 1)} onMouseEnter={this.onHover}>\r\n\t\t\t\t\t\tShuffle All Quizzes <span>({totalQuestions} questions)</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='quizContainer'>\r\n\t\t\t\t\t<Link to=\"/about\" className={renderClassName(maxOptions)} onMouseEnter={this.onHover}>\r\n\t\t\t\t\t\tAdditional Information\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)}\r\n}));\r\n","import React from 'react';\r\nimport Prism from 'prismjs';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connectScreenSize } from 'react-screen-size';\r\nimport { findQuiz, mapScreenSizeToProps } from '../utils/helpers';\r\n\r\nconst renderMarkup = (html) => {\r\n  return (\r\n    <span dangerouslySetInnerHTML={{__html: html}}></span>\r\n  );\r\n}\r\n\r\nconst renderQuestion = (question, index) => {\r\n  const solution = +question.get('solution');\r\n  const title = question.get('title');\r\n  const choices = question.get('choices');\r\n  const explanation = question.get('explanation');\r\n  return (\r\n    <div className=\"container headerPadding\">\r\n      <div className=\"row reviewItem\" key={title}>\r\n\r\n        <div className=\"col-md-4 col-sm-6\">\r\n          <div className='reviewTitle'>\r\n            <h1>Question {index + 1}</h1>\r\n            <h1 className='questionTitle'>{renderMarkup(title)}</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-sm-6\">\r\n          <h1>Choices</h1>\r\n        {choices.map((choice, index) => (\r\n          <div\r\n            key={choice}\r\n            className={solution === index ? 'choice reivew solution' : 'choice review'}>\r\n            <p>{renderMarkup(choice)}</p>\r\n          </div>\r\n        ))}\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-sm-12\">\r\n        {explanation && (\r\n          <div className='explanation'>\r\n            <h1>Explanation</h1>\r\n            <p>{renderMarkup(explanation)}</p>\r\n          </div>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* Review Quiz Questions Component */\r\nclass Review extends React.Component {\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n    Prism.highlightAll();\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown, false);\r\n  }\r\n  componentDidUpdate() {\r\n    Prism.highlightAll();\r\n  }\r\n  handleKeyDown = ({ code }) => {\r\n\t\tif (code === 'Escape') this.props.history.push('/');\r\n\t}\r\n  render() {\r\n    const { quiz, screen } = this.props;\r\n    if (!quiz) return null;\r\n    const challenges = quiz.get('challenges');\r\n    return (\r\n      <div className='studyWrapper reviewContainer'>\r\n\t\t\t\t<div className='studyContainer'>\r\n          <div className='quizHeader'>\r\n            <div className='quizTitle'>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"fccLink\"\r\n                href=\"#\">\r\n              </a>\r\n              <span>{quiz.get('titleForQuiz')}</span>\r\n            </div>\r\n            <h3 className='quizMeta'>\r\n              {challenges.size > 1 ? `${challenges.size} total questions` : ''}\r\n            </h3>\r\n            {screen.isDesktop && <span id=\"return\">\r\n              <Link to='/'>\r\n                <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n            </span>}\r\n          </div>\r\n          {challenges.map(renderQuestion)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\r\n\tconst { title } = props.match.params;\r\n  const quizzes = state.get('quizzes');\r\n\r\n\tconst quiz = findQuiz(title.replace(/-/g, ' '), quizzes);\r\n\r\n  if (!quiz) {\r\n    props.history.push('/');\r\n  }\r\n\r\n\treturn { quiz };\r\n\r\n};\r\n\r\nconst connectedReview = connect(mapStateToProps)(Review);\r\nexport default connectScreenSize(mapScreenSizeToProps)(connectedReview);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connectScreenSize } from 'react-screen-size';\r\nimport { mapScreenSizeToProps } from '../utils/helpers';\r\n\r\n/* About Component */\r\nexport default connectScreenSize(mapScreenSizeToProps)(\r\nclass About extends React.Component {\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown, false);\r\n  }\r\n  handleKeyDown = ({ code }) => {\r\n\t\tif (code === 'Escape') this.props.history.push('/');\r\n\t}\r\n  render() {\r\n    // const quiz = meta.get('quiz');\r\n    const { screen } = this.props;\r\n    return (\r\n      <div className='studyWrapper reviewContainer'>\r\n\t\t\t\t<div className='studyContainer'>\r\n          <div className='quizHeader'>\r\n            <div className='quizTitle'>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"fccLink\"\r\n                href=\"#\">\r\n                {/* <span>{quiz.get('titleForQuiz')}</span> */}\r\n              </a>\r\n            </div>\r\n            {!screen.isMobile && <span id=\"return\">\r\n              <Link to='/'>\r\n                <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n            </span>}\r\n          </div>\r\n          <div className='about'>\r\n            {<h2>English Practice</h2>}\r\n            {/* <h2>தினப் பயிற்சிக் குழுவின் தமிழ்ப் பயிற்சி</h2>\r\n            <h2>Tamil Practice by DailyPractice Team</h2> */}\r\n            {/* <button className='aboutContribute'>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\">\r\n                Contribute</a>\r\n            </button><br /> */}\r\n            <Link className='finishBtn' to='/'>\r\n\t\t\t\t\t\t\t<button>Return to Quiz Page</button>\r\n\t\t\t\t\t\t</Link>\r\n          </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    )\r\n  }\r\n});\r\n","import React from 'react';\r\nimport Prism from 'prismjs';\r\nimport { Link } from 'react-router-dom';\r\nimport { createScoreMeter, setHtmlMetadata } from '../utils/helpers';\r\n\r\n/* Practice Quiz Component, this component is responsible\r\n * for handling each question in a quiz session */\r\nexport default class Quiz extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomplete: false,\r\n\t\t\tselection: null,\r\n\t\t\tanswer: null,\r\n\t\t}\r\n\t\tdocument.addEventListener('keydown', this.handleKeyDown);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown, false);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst subtitle = this.props.meta.getIn(['currentQuestion', 'subtitle']);\r\n\t\tsetHtmlMetadata(subtitle);\r\n\t\tPrism.highlightAll();\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.props.meta !== nextProps.meta) {\r\n\t\t\tconst subtitle = nextProps.meta.getIn(['currentQuestion', 'subtitle']);\r\n\t\t\tsetHtmlMetadata(subtitle);\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\tPrism.highlightAll();\r\n\t}\r\n\tonHover = () => this.setState({ selection: null });\r\n\thandleKeyDown = (event) => {\r\n\r\n\t\tconst { code } = event;\r\n\r\n\t\tif (code === 'Space' || code === 'ArrowDown' || code === 'ArrowUp') {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t\tlet {\r\n\t\t\tanswer,\r\n\t\t\tselection,\r\n\t\t\tcomplete\r\n\t\t} = this.state;\r\n\r\n\t\tconst { meta } = this.props;\r\n\r\n\t\tconst question = meta.get('currentQuestion');\r\n\t\tconst questions = question.get('choices').size;\r\n\t\tconst solution = +question.get('solution');\r\n\r\n\t\tswitch (code) {\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tthis.props.finishQuiz();\r\n\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t} else if (selection !== null) {\r\n\t\t\t\t\tthis.handleAnswer(selection, solution);\r\n\t\t\t\t} else if (answer !== null) {\r\n\t\t\t\t\tthis.nextQuestion();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\t\tif (selection === null) {\r\n\t\t\t\t\tthis.setState({ selection: 0 });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselection++;\r\n\t\t\t\t\tif (selection === questions) {\r\n\t\t\t\t\t\tthis.setState({ selection: 0 });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ selection });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\t\tif (selection === null) {\r\n\t\t\t\t\tthis.setState({ selection: questions - 1 });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselection--;\r\n\t\t\t\t\tif (selection === -1) {\r\n\t\t\t\t\t\tthis.setState({ selection: questions - 1 });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ selection });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Escape':\r\n\t\t\t\tthis.props.finishQuiz();\r\n\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\thandleAnswer = (choice, solution) => {\r\n\t\tif (choice === solution) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswer: true,\r\n\t\t\t\tselection: null,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswer: false,\r\n\t\t\t\tselection: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tnextQuestion = () => {\r\n\t\tconst { meta, title } = this.props;\r\n\t\tconst index = meta.get('index');\r\n\t\tconst length = meta.getIn(['quiz', 'challenges']).size;\r\n\t\tif (this.state.answer) this.props.correct();\r\n\t\tif (index === length - 1) {\r\n\t\t\tthis.props.viewResults();\r\n\t\t\tthis.setState({ complete: true });\r\n\t\t} else {\r\n\t\t\tthis.props.nextQuestion();\r\n\t\t\tconst nextTitle = meta\r\n\t\t\t\t.getIn(['quiz', 'challenges'])\r\n\t\t\t\t.find((v, k) => k === (index + 1))\r\n\t\t\t\t.get('subtitle')\r\n\t\t\t\t.replace(/\\s/g, '-');\r\n\t\t\tthis.props.history.replace(`/practice/${title.replace(/\\s/g, '-')}/${nextTitle}`);\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswer: null,\r\n\t\t\t\tselection: null\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trenderMarkup = (html) => {\r\n\t\treturn (\r\n\t\t\t<span dangerouslySetInnerHTML={{ __html: html }}></span>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\r\n\t\tconst { selection, answer, complete } = this.state;\r\n\t\tconst { meta, screen } = this.props;\r\n\t\tconst { isMobile, isDesktop } = screen;\r\n\r\n\t\tconst quiz = meta.get('quiz');\r\n\t\tconst score = meta.get('score');\r\n\t\tconst index = meta.get('index');\r\n\t\tconst numberOfQuestions = quiz.get('challenges').size;\r\n\t\tconst quizTitle = quiz.get('title');\r\n\t\tconst currentQuestion = meta.get('currentQuestion');\r\n\t\tconst explanation = currentQuestion.get('explanation');\r\n\t\tconst solution = +currentQuestion.get('solution');\r\n\t\tconst percentage = score / meta.getIn(['quiz', 'challenges']).size;\r\n\r\n\t\tconst renderClassName = (i) => {\r\n\t\t\treturn (selection === i)\r\n\t\t\t\t? `choice selected ${isMobile ? 'mobile' : 'desktop'}`\r\n\t\t\t\t: `choice ${isMobile ? 'mobile' : 'desktop'}`;\r\n\t\t};\r\n\r\n\t\tconst tower = createScoreMeter(score, index, numberOfQuestions);\r\n\t\tconst widthPercentage = (100 / numberOfQuestions);\r\n\t\treturn (\r\n\t\t\t<div className='studyWrapper'>\r\n\t\t\t\t<div className='studyContainer'>\r\n\r\n\t\t\t\t\t<div id='score-tower'>\r\n\t\t\t\t\t\t{tower.map((type, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={type}\r\n\t\t\t\t\t\t\t\tkey={quiz.get('challenges').find((v, k) => k === i)}\r\n\t\t\t\t\t\t\t\tstyle={{ width: `${widthPercentage}%` }}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='quizHeader'>\r\n\t\t\t\t\t\t<div className='quizTitle'>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\tclassName=\"fccLink\"\r\n\t\t\t\t\t\t\t\thref=\"#\">\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<span>{quiz.get('titleForQuiz')}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{!this.state.complete\r\n\t\t\t\t\t\t\t? <h3 className='quizMeta'>Question {index + 1} of {numberOfQuestions}</h3>\r\n\t\t\t\t\t\t\t: <h3 className='quizMeta'>Quiz Complete</h3>}\r\n\t\t\t\t\t\t{isDesktop && <span id=\"return\">\r\n\t\t\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</span>}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row questionContainer\">\r\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t{!complete && <h1 className='questionTitle'>\r\n\t\t\t\t\t\t\t\t\t{this.renderMarkup(currentQuestion.get('title'))}\r\n\t\t\t\t\t\t\t\t</h1>}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t{!complete && currentQuestion.get('choices').map((choice, idx) => {\r\n\t\t\t\t\t\t\t\t\tconst key = (choice + idx);\r\n\t\t\t\t\t\t\t\t\t/* User has not selected an answer yet: */\r\n\t\t\t\t\t\t\t\t\tif (answer === null) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={renderClassName(idx)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={this.onHover}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleAnswer(idx, solution)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(choice)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t/* User selected the correct answer: */\r\n\t\t\t\t\t\t\t\t\t} else if (answer) {\r\n\t\t\t\t\t\t\t\t\t\tif (solution === idx) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='choice' id='correctWinner'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(choice)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='choice' id='wrongWinner'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(choice)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/* User selected the wrong answer: */\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (solution === idx) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='choice' id='correctLoser'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(choice)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='choice' id='wrongLoser'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(choice)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{answer !== null && !complete &&\r\n\t\t\t\t\t\t<div className='messageDiv'>\r\n\t\t\t\t\t\t\t{answer\r\n\t\t\t\t\t\t\t\t? <h1 className='correctAnswer'>Correct, great work!</h1>\r\n\t\t\t\t\t\t\t\t: <h1 className='wrongAnswer'>Sorry, that is not correct!</h1>}\r\n\t\t\t\t\t\t\t{answer !== null && !answer && explanation && (\r\n\t\t\t\t\t\t\t\t<div className='explanation'>\r\n\t\t\t\t\t\t\t\t\t<h3>Explanation:</h3>\r\n\t\t\t\t\t\t\t\t\t<p>{this.renderMarkup(explanation)}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{index + 1 === numberOfQuestions\r\n\t\t\t\t\t\t\t\t? <button onClick={this.nextQuestion}>View Results</button>\r\n\t\t\t\t\t\t\t\t: <button onClick={this.nextQuestion}>Next Question</button>}\r\n\t\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t\t{complete &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2 className='scoreMessage'>\r\n\t\t\t\t\t\t\t\t{/* <p>\r\n\t\t\t\t\t\t\t\t\tநீங்கள், {numberOfQuestions} கேள்விகளில் {score} கேள்விகளுக்கு சரியான விடை/பதில் தந்து இருக்கிறீர்கள்! {percentage > 0.75 ? 'நல்ல மதிப்பெண்கள்! வாழ்த்துக்கள்!!' : 'அடுத்த முறை நல்ல மதிப்பெண்கள் பெற வாழ்த்துக்கள்!'}\r\n\t\t\t\t\t\t\t\t</p> */}\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tYou scored {score} correct out of {numberOfQuestions} questions! {percentage > 0.75 ? 'Nice work!' : 'Better luck next time!'}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<Link className='finishBtn' to='/' onClick={() => this.props.finishQuiz()}>\r\n\t\t\t\t\t\t\t\t<button>Return to Quiz Page</button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{/* <button className='fbShare'>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\thref=\"#\">\r\n\t\t\t\t\t\t\t\t\tShare...\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t\t{!isMobile && <div id='infoBox'>\r\n\t\t\t\t\t\t<p>Use <i className='fa fa-long-arrow-up'></i> <i className='fa fa-long-arrow-down'></i> space and esc</p>\r\n\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { connectScreenSize } from 'react-screen-size';\r\nimport Quiz from './PracticeQuiz';\r\nimport { validateQuestionName, mapScreenSizeToProps } from '../utils/helpers';\r\nimport {\r\n\tnextQuestion,\r\n\tstartQuiz,\r\n\tstartQuizByQuestion,\r\n\tstartAllQuestionQuiz,\r\n\tcorrect,\r\n\tviewResults,\r\n\tfinishQuiz\r\n} from '../redux/actions';\r\n\r\n/* This component wraps the actual quiz component, mainly to perform\r\n * the routing logic noted in the comment below */\r\nclass QuizContainer extends React.Component {\r\n\tcomponentWillMount() {\r\n\r\n\t\t/* The title and question props are from the url parameters. We use\r\n\t\t * these in addition to the quiz meta active state to determine 'how'\r\n\t\t * a user got here. They may have arrived here from a shared link, for\r\n\t\t * instance, in which case we want to begin a quiz (assuming the title\r\n\t\t * and question are valid). All this logic starts here and continues\r\n\t\t * with componentWillReceiveProps, and we either end up redirecting\r\n\t\t * or we wait for the full quiz props to load the child quiz component\r\n\t\t * below. ***************************** */\r\n\r\n\t\tconst { title, question, meta } = this.props;\r\n\t\tconst originalTitle = title.replace(/-/g, ' ');\r\n\t\tconst active = meta.get('active');\r\n\t\tconst quizzes = meta.get('quizzes');\r\n\t\tif (!active) {\r\n\t\t\tif (originalTitle === 'shuffle') {\r\n\t\t\t\tthis.props.startAllQuestionQuiz();\r\n\t\t\t} else if (originalTitle && !question) {\r\n\t\t\t\tthis.props.startQuiz(originalTitle);\r\n\t\t\t} else if (originalTitle && question) {\r\n\t\t\t\tconst questionTitle = validateQuestionName(originalTitle, question.replace(/-/g, ' '), quizzes);\r\n\t\t\t\tif (questionTitle) {\r\n\t\t\t\t\tthis.props.startQuizByQuestion(originalTitle, questionTitle);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tconst { title } = this.props;\r\n\t\tconst { question } = nextProps;\r\n\t\tconst activeQuestion = nextProps.meta\r\n\t\t\t.getIn(['currentQuestion', 'subtitle'])\r\n\t\tif (!question && activeQuestion) {\r\n\t\t\tconst next = `${title.replace(/\\s/g, '-')}/${activeQuestion.replace(/\\s/g, '-')}`;\r\n\t\t\tthis.props.history.replace(next);\r\n\t\t}\r\n\t}\r\n  render() {\r\n\t\tconst { title, question, meta } = this.props;\r\n\t\tconst active = meta.get('active');\r\n\t\t/* Only render the quiz if we establish a valid title, question, and active session */\r\n    if (title && question && active) {\r\n\t\t\treturn <Quiz {...this.props} />\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\tconst { title, question } = props.match.params;\r\n\treturn {\r\n\t\tmeta: state,\r\n\t\ttitle: title,\r\n\t\tquestion\r\n\t};\r\n};\r\n\r\nconst dispatchProps = {\r\n\tstartQuiz,\r\n\tstartQuizByQuestion,\r\n\tstartAllQuestionQuiz,\r\n\tnextQuestion,\r\n\tcorrect,\r\n\tviewResults,\r\n\tfinishQuiz,\r\n};\r\n\r\nconst connectedPractice = connect(mapStateToProps, dispatchProps)(QuizContainer);\r\nexport default connectScreenSize(mapScreenSizeToProps)(connectedPractice);\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Index from './components/Index';\r\nimport Review from './components/ReviewQuiz';\r\nimport About from './components/About';\r\nimport QuizContainer from './components/QuizContainer';\r\n\r\n/* top level component renders the App's routes */\r\nexport default class extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={Index} />\r\n          <Route path='/practice/:title/:question' component={QuizContainer} />\r\n          <Route path='/practice/:title' component={QuizContainer} />\r\n          <Route path='/review/:title' component={Review} />\r\n          <Route exact path='/about' component={About} />\r\n          <Route component={Index} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n};\r\n","\r\n/**\r\n * Export all the quizzes as an array, see the CONTRIBUTING.md\r\n * guide for directions for adding new questions or modifying\r\n * the content of these challenges.\r\n */\r\n\r\n//  import tamil_letters_01 from './tamil_letters_01_mei_uyir_uyirmei';\r\n//  import tamil_letters_02 from './tamil_letters_02_uyirmei_mei_uyir';\r\nimport tn_08_eng_l01 from './tn_08_eng_l01_synonyms'\r\n\r\nconst challenges = [\r\n\ttn_08_eng_l01\r\n\t// tamil_letters_01,\r\n\t// tamil_letters_02\r\n];\r\n\r\n/* This doesn't cover everything but serves as a basic verification that\r\n * the quiz data being loading into the app is complete, and will not\r\n * break the app (e.g. if the title field was empty). Any contributions\r\n * to the app should be quality-assured manually by review, but this\r\n * can serve as a last resort to guard against problems. */\r\n\r\nexport default (function(challenges) {\r\n\r\n\tlet noExplanation = 0;\r\n\tlet rejectedTitles = [];\r\n\tlet rejectedCategories = [];\r\n\r\n\tconst verified = challenges.reduce((verified, category) => {\r\n\r\n\t\tconst noRepeatTitle = {};\r\n\t\tconst noRepeatSubtitle = {};\r\n\r\n\t\tif (!category.title || !category.category) {\r\n\t\t\trejectedCategories.push(category.title);\r\n\t\t\treturn verified;\r\n\t\t}\r\n\t\tconst verifiedQuestions = category.challenges.filter(q => {\r\n\t\t\tif (!q.title || !q.subtitle || !q.solution) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (q.choices.length < 2) return false;\r\n\t\t\tif (noRepeatTitle[q.title]) {\r\n\t\t\t\trejectedTitles.push(q.title);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (noRepeatSubtitle[q.subtitle]) {\r\n\t\t\t\trejectedTitles.push(q.subtitle);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnoRepeatTitle[q.title] = true;\r\n\t\t\tnoRepeatSubtitle[q.subtitle] = true;\r\n\t\t\tif (!q.explanation) noExplanation++;\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tif (verifiedQuestions.length > 0) {\r\n\t\t\tcategory.challenges = verifiedQuestions;\r\n\t\t\treturn verified.concat(category);\r\n\t\t} else {\r\n\t\t\trejectedCategories.push(category.title);\r\n\t\t\treturn verified;\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/* Log notes about any removed challenges/content: */\r\n\tif (rejectedCategories.length || noExplanation) console.warn('Take Note:');\r\n\r\n\tif (rejectedTitles.length) {\r\n\t\tconsole.log(`The following question titles are duplicates, titles must be ` +\r\n\t\t\t`unique: ${rejectedTitles.join(', ')}`\r\n\t\t);\r\n\t}\r\n\r\n\tif (rejectedCategories.length) {\r\n\t\tconsole.log(`The following quiz categories could not be added, ` +\r\n\t\t\t`probably because they are incomplete: ${rejectedCategories.join(', ')}`\r\n\t\t);\r\n\t}\r\n\r\n\tif (noExplanation) console.log(`${noExplanation} Questions have no explanation. ` +\r\n\t\t`Adding explanations will improve the learning experience.`);\r\n\r\n\treturn verified;\r\n\r\n})(challenges);\r\n","export default {\n    'title': `Lesson 1 Synonyms`,\n    'titleForQuiz': `Lesson 1 Synonyms`,\n    'category': `Lesson 1 Synonyms`,\n    'challenges': [\n        {\n            title: `concerned with the self`,\n            subtitle: `1`,\n            choices: [\n                `self-centred`,\n                `grub`,\n                `ignorant`,\n            ],\n            solution: `0`,\n\n        }\n        , {\n            title: `feeling of contempt or scorn`,\n            subtitle: `2`,\n            choices: [\n                `flutter`,\n                `grub`,\n                `disdain`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `heap`,\n            subtitle: `3`,\n            choices: [\n                `flutter`,\n                `cruel`,\n                `muck heap`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `food`,\n            subtitle: `4`,\n            choices: [\n                `suspected`,\n                `consoled`,\n                `grub`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `a judicial officer with limited authority to administer and enforce the law `,\n            subtitle: `5`,\n            choices: [\n                `magistrate`,\n                `flutter`,\n                `disgrace`,\n            ],\n            solution: `0`,\n\n        }\n        , {\n            title: `the state of being dishonored, or covered with same`,\n            subtitle: `6`,\n            choices: [\n                `disdain`,\n                `muck heap`,\n                `disgrace`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `unaware`,\n            subtitle: `7`,\n            choices: [\n                `grub`,\n                `muck heap`,\n                `ignorant`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `comforted (someone) in the time of grief or disappointment `,\n            subtitle: `8`,\n            choices: [\n                `disgrace`,\n                `disdain`,\n                `consoled`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `believed to be a cause or at fault`,\n            subtitle: `9`,\n            choices: [\n                `disdain`,\n                `self-centred`,\n                `suspected`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `to flap or wave quickly but irregularly`,\n            subtitle: `10`,\n            choices: [\n                `magistrate`,\n                `confined`,\n                `flutter`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `restricted`,\n            subtitle: `11`,\n            choices: [\n                `disdain`,\n                `consoled`,\n                `confined`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `merciless or heartless`,\n            subtitle: `12`,\n            choices: [\n                `gravely`,\n                `flutter`,\n                `cruel`,\n            ],\n            solution: `2`,\n\n        }\n        , {\n            title: `in a grave or serious manner`,\n            subtitle: `13`,\n            choices: [\n                `disgrace`,\n                `muck heap`,\n                `gravely`,\n            ],\n            solution: `2`,\n\n        }\n    ]\n};\n    ","import { Map, List, fromJS } from 'immutable';\r\nimport quizzes from '../challenges';\r\n\r\nimport { findQuiz, shuffleQuiz } from '../utils/helpers';\r\nimport {\r\n  START_ALL,\r\n  START_QUIZ,\r\n  START_QUIZ_BY_QUESTION,\r\n  NEXT_QUESTION,\r\n  SCORE,\r\n  RESULTS,\r\n  FINISH_QUIZ\r\n} from './actions';\r\n\r\n/* We use ImmutableJS to maintain the Redux state object, which\r\n * contains a key with the array of all quizzes and some metadata\r\n * associated with the current active quiz. */\r\n\r\nconst defaultState = Map({\r\n  active: false,\r\n  score: 0,\r\n  index: 0,\r\n  quiz: null,\r\n  currentQuestion: null,\r\n  quizzes: List(fromJS(quizzes))\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch(type) {\r\n\r\n  case START_ALL: {\r\n    const quizzes = state.get('quizzes').map(shuffleQuiz);\r\n    const quiz = fromJS({\r\n      title: 'All Categories',\r\n      challenges: quizzes.reduce((all, quiz) => {\r\n        return all.concat(quiz.get('challenges'));\r\n      }, List())\r\n    });\r\n    return state\r\n      .set('active', true)\r\n      .set('quiz', quiz)\r\n      .set('currentQuestion', quiz.get('challenges').first());\r\n  }\r\n\r\n  case START_QUIZ: {\r\n    const quizzes = state.get('quizzes');\r\n    const quiz = shuffleQuiz(findQuiz(payload, quizzes));\r\n    return state\r\n      .set('active', true)\r\n      .set('quiz', quiz)\r\n      .set('currentQuestion', quiz.get('challenges').first());\r\n  }\r\n\r\n  case START_QUIZ_BY_QUESTION: {\r\n    const { title, question } = payload;\r\n    const quizzes = state.get('quizzes');\r\n    const originalQuiz = shuffleQuiz(findQuiz(title, quizzes));\r\n    const first = originalQuiz.get('challenges').findEntry((v, k) => {\r\n      return v.get('subtitle') === question;\r\n    });\r\n\r\n    const quiz = originalQuiz\r\n      .update('challenges', c => c.splice(first[0], 1))\r\n      .update('challenges', c => c.insert(0, first[1]));\r\n\r\n    return state\r\n      .set('active', true)\r\n      .set('quiz', quiz)\r\n      .set('currentQuestion', quiz.get('challenges').first());\r\n  }\r\n\r\n  case NEXT_QUESTION: {\r\n    const index = state.get('index') + 1;\r\n    const quiz = state.get('quiz');\r\n    return state\r\n      .update('index', () => index)\r\n      .update('currentQuestion', () => {\r\n        return quiz.get('challenges').find((v, k) => k === index);\r\n      });\r\n  }\r\n\r\n  case SCORE: {\r\n    return state.update('score', s => s + 1);\r\n  }\r\n\r\n  case RESULTS: {\r\n    return state.update('index', i => i + 1);\r\n  }\r\n\r\n  case FINISH_QUIZ: {\r\n    return defaultState;\r\n  }\r\n\r\n  /* eslint-disable no-unreachable */\r\n  default:\r\n    return state;\r\n  };\r\n\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './utils/registerServiceWorker';\r\n\r\nimport App from './App';\r\nimport './styles/index.css';\r\nimport reducer from './redux/reducer';\r\n\r\n/* Creat the Redux store */\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n/* Serve the App */\r\nconst Index = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(Index, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}